@page "/script/list"
@using EasyNow.Dto.Script
@inject EasyNow.ApiClient.IEasyNowApi ApiClient

<PageContainer Breadcrumb="Breadcrumb">
    <Card>
        <Table @ref="table"
               DataSource="@_datas"
               Total="_total"
               @bind-PageIndex="_pageIndex"
               @bind-PageSize="_pageSize"
               OnPageIndexChange="async e=>await fetchData(e)">
            <Selection Key="@(context.Id.ToString())" />
            <Column @bind-Field="@context.Code" Sortable />
            <Column @bind-Field="@context.Name" Sortable />
            <ActionColumn Title="Acton">
                <Space Size="middle">
                    <SpaceItem>
                        <Button Type="button" OnClick="()=>onRun(context)">运行</Button>
                    </SpaceItem>
                </Space>
            </ActionColumn>
        </Table>
    </Card>
</PageContainer>


@code {

public RenderFragment Breadcrumb =@<Breadcrumb>
    <BreadcrumbItem>
        Home
    </BreadcrumbItem>
    <BreadcrumbItem>
        Script
    </BreadcrumbItem>
    <BreadcrumbItem>
        List
    </BreadcrumbItem>
</Breadcrumb>;

    List<ScriptInfo> _datas;

    ITable table;
    int _pageIndex = 1;
    int _pageSize = 10;
    int _total = 0;

    protected override async Task OnParametersSetAsync()
    {
        var result = await ApiClient.QueryScript(new ScriptQueryModel{
            PageSize=20,
            PageNumber=1
        });
        if (result.Code == 0)
        {
            this._total = result.Data.TotalItemCount;
            this._pageIndex = result.Data.PageNumber;
            this._pageSize = result.Data.PageSize;
            this._datas = result.Data.Items;
        }
    }

    async Task fetchData(PaginationEventArgs args)
    {
        _datas=(await ApiClient.QueryScript(new ScriptQueryModel{
            PageNumber=args.PageIndex,
            PageSize=args.PageSize
        })).Data.Items;
    }

    void onRun(ScriptInfo scriptInfo)
    {

    }
    }
